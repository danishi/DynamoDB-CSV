name: pypi-and-docker-hub-release

on:
  push:
    tags:
      - 'v*'

jobs:
  deploy:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: ['3.10']
        os: [ubuntu-latest]

    steps:
      - name: Checkout 游댒
        uses: actions/checkout@v3

      # PyPI release
      - name: Setup Python ${{ matrix.python-version }} 游댢
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Python Install dependencies 游빛
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build and publish PyPI 游꾸
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*

      - name: Sleep for 60 seconds 游눣
        run: sleep 60s
        shell: bash

      # Docker Hub release
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: danishi/dynamodb-csv

      - name: Log in to Docker Hub 游뛁
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push to Docker Hub 游꾸
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # GitHub Packages release
      - name: Set env 游댢
        run: |
          OWNER=$(echo ${{ github.repository_owner }})
          echo "RELEASE_OWNER=$OWNER" >> $GITHUB_ENV
          IMAGE=dynamodb-csv
          echo "RELEASE_IMAGE=$IMAGE" >> $GITHUB_ENV
          VERSION=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build 游댣
        run: |
          docker build -t ghcr.io/${{ env.RELEASE_OWNER }}/${{ env.RELEASE_IMAGE }}:${{ env.RELEASE_VERSION }} .

      - name: Login 游뛁
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ env.RELEASE_OWNER }} --password-stdin

      - name: Push by tag name 游꾸
        run: |
          docker push ghcr.io/${{ env.RELEASE_OWNER }}/${{ env.RELEASE_IMAGE }}:${{ env.RELEASE_VERSION }}

      - name: Push by latest 游꾸
        run: |
          docker image tag ghcr.io/${{ env.RELEASE_OWNER }}/${{ env.RELEASE_IMAGE }}:${{ env.RELEASE_VERSION }} ghcr.io/${{ env.RELEASE_OWNER }}/${{ env.RELEASE_IMAGE }}:latest
          docker push ghcr.io/${{ env.RELEASE_OWNER }}/${{ env.RELEASE_IMAGE }}:latest
